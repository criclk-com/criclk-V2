<%- include('partials/header') %>

<section class="streaming-container">
  <h1>IPL 2025 Live Streaming</h1>
  
  <div class="channel-buttons">
    <% Object.keys(channels).forEach(function(channelId) { %>
      <button class="channel-btn <%= channelId === defaultChannel ? 'active' : '' %>" 
              data-channel="<%= channelId %>" 
              data-token="<%= channels[channelId].token %>">
        <%= channels[channelId].name %>
      </button>
    <% }); %>
  </div>

  <div class="player-container">
    <div class="player-wrapper" id="player-wrapper">
      <!-- Loading placeholder -->
      <div class="player-placeholder">
        <div class="loading-spinner"></div>
        <p>Loading stream...</p>
      </div>
    </div>
    
    <!-- Mobile helper text -->
    <% if (typeof isMobile !== 'undefined' && isMobile) { %>
    <div class="mobile-helper">
      <p><i class="fas fa-mobile-alt"></i> For best viewing experience, rotate your device to landscape mode and tap the fullscreen button in the player.</p>
    </div>
    <% } %>
  </div>

  <!-- Today's Matches Section -->
  <div class="todays-matches">
    <h2>Today's Matches</h2>
    <div class="matches-grid">
      <% 
      // Filter to show only today's matches
      const todayMatches = matches.filter(match => match.isToday);
      if (todayMatches.length > 0) { 
      %>
        <% todayMatches.forEach(function(match) { %>
          <div class="match-card horizontal">
            <div class="teams-container">
              <div class="team">
                <div class="team-logo">
                  <img src="<%= match.team1Logo %>" alt="<%= match.team1 %>">
                </div>
                <div class="team-name"><%= match.team1 %></div>
              </div>
              <div class="vs">vs</div>
              <div class="team">
                <div class="team-logo">
                  <img src="<%= match.team2Logo ? match.team2Logo : '/images/default-team-logo.png' %>" alt="<%= match.team2 ? match.team2 : 'TBD' %>">
                </div>
                <div class="team-name"><%= match.team2 ? match.team2 : 'TBD' %></div>
              </div>
            </div>
            <div class="match-info">
              <div class="match-number"><%= match.matchNumber %></div>
              <div class="match-time"><%= match.time %></div>
              <div class="match-channels"><%= match.channels %></div>
            </div>
          </div>
        <% }); %>
      <% } else { %>
        <p class="no-matches">No matches scheduled for today.</p>
      <% } %>
    </div>
  </div>

  <!-- Upcoming Matches Schedule -->
  <div class="upcoming-matches">
    <h2>Upcoming Matches</h2>
    <% if (matches.length > 0) { %>
      <div class="schedule-table">
        <table>
          <thead>
            <tr>
              <th>Match</th>
              <th>Teams</th>
              <th>Date</th>
              <th>Time</th>
            </tr>
          </thead>
          <tbody>
            <% 
            // Filter to show only future matches (not today)
            const futureMatches = matches.filter(match => !match.isToday);
            futureMatches.forEach(function(match) { 
            %>
              <tr>
                <td><%= match.matchNumber %></td>
                <td>
                  <div class="table-teams">
                    <img src="<%= match.team1Logo %>" alt="<%= match.team1 %>" class="small-logo">
                    vs
                    <img src="<%= match.team2Logo ? match.team2Logo : '/images/default-team-logo.png' %>" alt="<%= match.team2 ? match.team2 : 'TBD' %>" class="small-logo">
                  </div>
                  <div class="team-names">
                    <%= match.team1 %> vs <%= match.team2 ? match.team2 : 'TBD' %>
                  </div>
                </td>
                <td><%= match.date %></td>
                <td><%= match.time %></td>
              </tr>
            <% }); %>
          </tbody>
        </table>
      </div>
      <div class="view-full-schedule">
        <a href="/schedule" class="btn">View Full Schedule</a>
      </div>
    <% } else { %>
      <p class="no-matches">No upcoming matches available.</p>
    <% } %>
  </div>
</section>

<style>
  .player-placeholder {
    background-color: #1a1a2e;
    color: white;
    height: 500px;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    border-radius: 8px;
  }
  
  .loading-spinner {
    border: 5px solid rgba(255, 255, 255, 0.3);
    border-radius: 50%;
    border-top: 5px solid #e91e63;
    width: 50px;
    height: 50px;
    animation: spin 1s linear infinite;
    margin-bottom: 20px;
  }
  
  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }
  
  .match-card.horizontal {
    display: flex;
    justify-content: space-between;
    background-color: white;
    border-radius: 8px;
    padding: 15px;
    margin-bottom: 15px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  }
  
  .match-card.horizontal .teams-container {
    display: flex;
    align-items: center;
    min-width: 60%;
  }
  
  .match-card.horizontal .team {
    display: flex;
    flex-direction: column;
    align-items: center;
  }
  
  .match-card.horizontal .team-logo {
    width: 50px;
    height: 50px;
    border-radius: 50%;
    overflow: hidden;
    margin-bottom: 5px;
  }
  
  .match-card.horizontal .team-logo img {
    width: 100%;
    height: 100%;
    object-fit: contain;
  }
  
  .match-card.horizontal .vs {
    margin: 0 15px;
    font-weight: bold;
  }
  
  .match-card.horizontal .match-info {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: flex-end;
  }
  
  .match-card.horizontal .match-number {
    font-weight: bold;
    margin-bottom: 5px;
  }
  
  .match-card.horizontal .match-time {
    color: #e91e63;
    font-weight: bold;
    margin-bottom: 5px;
  }
  
  .match-card.horizontal .match-channels {
    font-size: 0.8rem;
    color: #666;
  }
  
  .no-matches {
    padding: 20px;
    text-align: center;
    color: #666;
    background-color: #f5f5f5;
    border-radius: 8px;
  }
  
  .schedule-table {
    margin-top: 20px;
    overflow-x: auto;
  }
  
  .schedule-table table {
    width: 100%;
    border-collapse: collapse;
    background-color: white;
    border-radius: 8px;
    overflow: hidden;
  }
  
  .schedule-table th, .schedule-table td {
    padding: 12px 15px;
    text-align: left;
    border-bottom: 1px solid #eee;
  }
  
  .schedule-table th {
    background-color: #f5f5f5;
    font-weight: bold;
    color: #333;
  }
  
  .schedule-table tr:last-child td {
    border-bottom: none;
  }
  
  .small-logo {
    width: 30px;
    height: 30px;
    border-radius: 50%;
    object-fit: contain;
    vertical-align: middle;
  }
  
  .table-teams {
    display: flex;
    align-items: center;
    gap: 10px;
  }
  
  .team-names {
    font-size: 0.8rem;
    color: #666;
    margin-top: 5px;
  }
  
  .view-full-schedule {
    margin-top: 20px;
    text-align: center;
  }
  
  .mobile-helper {
    background-color: #f8f9fa;
    border-left: 4px solid #e91e63;
    padding: 10px 15px;
    margin-top: 10px;
    border-radius: 4px;
    font-size: 0.9rem;
    color: #666;
  }
  
  .mobile-helper i {
    color: #e91e63;
    margin-right: 5px;
  }
  
  @media (max-width: 768px) {
    .match-card.horizontal {
      flex-direction: column;
    }
    
    .match-card.horizontal .match-info {
      margin-top: 15px;
      align-items: center;
    }
    
    .schedule-table th, .schedule-table td {
      padding: 8px 10px;
      font-size: 0.9rem;
    }
    
    .small-logo {
      width: 25px;
      height: 25px;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const channelBtns = document.querySelectorAll('.channel-btn');
    const playerWrapper = document.getElementById('player-wrapper');
    
    // Function to load a stream
    function loadStream(channelId, token) {
      // Show loading state
      playerWrapper.innerHTML = `
        <div class="player-placeholder">
          <div class="loading-spinner"></div>
          <p>Loading ${channels[channelId].name}...</p>
        </div>
      `;
      
      // Request a stream token from the server
      fetch(`/api/generate-token?channel=${channelId}&token=${token}`)
        .then(response => {
          if (!response.ok) {
            throw new Error('Failed to generate stream token');
          }
          return response.json();
        })
        .then(data => {
          // Create iframe for the stream
          const streamUrl = `/stream?token=${data.token}`;
          
          // Create the iframe inside a container div
          const container = document.createElement('div');
          container.className = 'stream-container';
          container.style.height = '500px'; // Fixed height for desktop
          container.style.overflow = 'hidden';
          container.style.borderRadius = '8px';
          
          const iframe = document.createElement('iframe');
          iframe.src = streamUrl;
          iframe.width = '100%';
          iframe.height = '100%';
          iframe.style.border = 'none';
          iframe.allowFullscreen = true;
          
          // Add to page
          container.appendChild(iframe);
          playerWrapper.innerHTML = '';
          playerWrapper.appendChild(container);
          
          // Update URL without page reload
          const stateObj = { channelId: channelId };
          history.pushState(stateObj, '', `/ipl20-watch/${token}`);
        })
        .catch(error => {
          console.error('Error:', error);
          playerWrapper.innerHTML = `
            <div class="player-placeholder">
              <div style="color: #ff3860; font-size: 36px; margin-bottom: 20px;">
                <i class="fas fa-exclamation-circle"></i>
              </div>
              <p>Error loading stream. Please try again.</p>
              <button class="btn" style="margin-top: 20px;" onclick="window.location.reload()">Retry</button>
            </div>
          `;
        });
    }
    
    // Set up channel buttons
    channelBtns.forEach(btn => {
      btn.addEventListener('click', function() {
        // Update active button state
        channelBtns.forEach(b => b.classList.remove('active'));
        this.classList.add('active');
        
        // Get channel info
        const channelId = this.getAttribute('data-channel');
        const token = this.getAttribute('data-token');
        
        // Load the selected stream
        loadStream(channelId, token);
      });
    });
    
    // Load the default channel on page load
    const defaultChannelId = '<%= defaultChannel %>';
    const defaultToken = document.querySelector(`.channel-btn[data-channel="${defaultChannelId}"]`).getAttribute('data-token');
    loadStream(defaultChannelId, defaultToken);
  });
</script>

<%- include('partials/footer') %>
